// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "BitTap",
            "url": "https://bittap.org"
        },
        "license": {
            "name": "GNU GPLv3",
            "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "Exchanges a login + password for a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Authenticate",
                "parameters": [
                    {
                        "description": "Login and password",
                        "name": "AuthRequestBody",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tap/balance/:asset_id": {
            "get": {
                "description": "Current user's balance in satoshi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Taproot Assets"
                ],
                "summary": "Retrieve balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tapcontrollers.BalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tap/balances/all": {
            "get": {
                "description": "Retrieve all user balances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Taproot Assets"
                ],
                "summary": "Retrieve all balances",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tapcontrollers.BalancesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tap/create-address": {
            "post": {
                "description": "Get or create address for deposit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Taproot Assets"
                ],
                "summary": "Get or create address",
                "parameters": [
                    {
                        "description": "Asset ID",
                        "name": "asset_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Amount",
                        "name": "amt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tapcontrollers.AddressResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tap/transfer": {
            "post": {
                "description": "Transfer assets to an address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Taproot Assets"
                ],
                "summary": "Transfer assets",
                "parameters": [
                    {
                        "description": "Address",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tapcontrollers.TransferResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tap/universe-assets": {
            "get": {
                "description": "Retrieve universe assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Taproot Assets"
                ],
                "summary": "Retrieve universe assets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tapcontrollers.UniverseAssetsResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/admin/users": {
            "put": {
                "description": "Update an account with a new a login, password and activation status. Requires Authorization header with admin token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update an account",
                "parameters": [
                    {
                        "description": "Update User",
                        "name": "account",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.UpdateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.UpdateUserResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/balance": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Current user's balance in satoshi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Retrieve balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.BalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/invoices": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Returns a new bolt11 invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Generate a new invoice",
                "parameters": [
                    {
                        "description": "Add Invoice",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2controllers.AddInvoiceRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.AddInvoiceResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/invoices/incoming": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Returns a list of incoming invoices for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Retrieve incoming invoices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2controllers.Invoice"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/invoices/outgoing": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Returns a list of outgoing payments for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Retrieve outgoing payments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2controllers.Invoice"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/invoices/{payment_hash}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Retrieve information about a specific invoice by payment hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Get a specific invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment hash",
                        "name": "payment_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.Invoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/payments/bolt11": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Pay a bolt11 invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Pay an invoice",
                "parameters": [
                    {
                        "description": "Invoice to pay",
                        "name": "PayInvoiceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2controllers.PayInvoiceRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.PayInvoiceResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/payments/keysend": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Pay a node without an invoice using it's public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Make a keysend payment",
                "parameters": [
                    {
                        "description": "Invoice to pay",
                        "name": "KeySendRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2controllers.KeySendRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.KeySendResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/payments/keysend/multi": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Pay multiple nodes without an invoice using their public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Make multiple keysend payments",
                "parameters": [
                    {
                        "description": "Invoice to pay",
                        "name": "MultiKeySendRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2controllers.MultiKeySendRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.MultiKeySendResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/users": {
            "post": {
                "description": "Create a new account with a login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create an account",
                "parameters": [
                    {
                        "description": "Create User",
                        "name": "account",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.CreateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2controllers.CreateUserResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AuthRequestBody": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "controllers.AuthResponseBody": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "tapcontrollers.AddressResponseBody": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "tapcontrollers.BalanceResponse": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                }
            }
        },
        "tapcontrollers.BalancesResponse": {
            "type": "object",
            "properties": {
                "balances": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "tapcontrollers.TransferResponseBody": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "tapcontrollers.UniverseAssetsResponseBody": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v2controllers.AddInvoiceRequestBody": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 0
                },
                "asset_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "description_hash": {
                    "type": "string"
                }
            }
        },
        "v2controllers.AddInvoiceResponseBody": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "payment_hash": {
                    "type": "string"
                },
                "payment_request": {
                    "type": "string"
                }
            }
        },
        "v2controllers.BalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "v2controllers.CreateUserRequestBody": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "v2controllers.CreateUserResponseBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "v2controllers.Invoice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "custom_records": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "description_hash": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "is_paid": {
                    "type": "boolean"
                },
                "keysend": {
                    "type": "boolean"
                },
                "payment_hash": {
                    "type": "string"
                },
                "payment_preimage": {
                    "type": "string"
                },
                "payment_request": {
                    "type": "string"
                },
                "settled_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v2controllers.KeySendRequestBody": {
            "type": "object",
            "required": [
                "amount",
                "asset_id",
                "destination"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "asset_id": {
                    "type": "string"
                },
                "customRecords": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "custom_records": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "destination": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                }
            }
        },
        "v2controllers.KeySendResponseBody": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "asset_id": {
                    "type": "integer"
                },
                "custom_records": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "description_hash": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "payment_hash": {
                    "type": "string"
                },
                "payment_preimage": {
                    "type": "string"
                }
            }
        },
        "v2controllers.KeySendResult": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/responses.ErrorResponse"
                },
                "keysend": {
                    "$ref": "#/definitions/v2controllers.KeySendResponseBody"
                }
            }
        },
        "v2controllers.MultiKeySendRequestBody": {
            "type": "object",
            "properties": {
                "keysends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2controllers.KeySendRequestBody"
                    }
                }
            }
        },
        "v2controllers.MultiKeySendResponseBody": {
            "type": "object",
            "properties": {
                "keysends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2controllers.KeySendResult"
                    }
                }
            }
        },
        "v2controllers.PayInvoiceRequestBody": {
            "type": "object",
            "required": [
                "invoice"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 0
                },
                "asset_id": {
                    "description": "NOTE: this is defaulting to bitcoin balance",
                    "type": "string",
                    "minLength": 1
                },
                "invoice": {
                    "type": "string"
                }
            }
        },
        "v2controllers.PayInvoiceResponseBody": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "asset_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "description_hash": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "payment_hash": {
                    "type": "string"
                },
                "payment_preimage": {
                    "type": "string"
                },
                "payment_request": {
                    "type": "string"
                }
            }
        },
        "v2controllers.UpdateUserRequestBody": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "deactivated": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "v2controllers.UpdateUserResponseBody": {
            "type": "object",
            "properties": {
                "deactivated": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/auth"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.9.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "LnHub",
	Description:      "Accounting wrapper for the Lightning Network to support Taproot Assets and RGB.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
